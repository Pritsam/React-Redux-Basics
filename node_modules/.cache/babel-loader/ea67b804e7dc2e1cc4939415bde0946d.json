{"ast":null,"code":"//import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isLoggedin: false,\n  isLoggedout: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducer: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.counter = !state.showCounter;\n    }\n\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialAuthState,\n  reducer: {\n    login(state) {\n      state.isLoggedin = true, state.isLoggedout = false;\n    },\n\n    logout(state) {\n      state.isLoggedin = false, state.isLoggedout = true;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const CounterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","initialAuthState","isLoggedin","isLoggedout","counterSlice","name","initialState","reducer","increment","state","decrement","increase","action","payload","toggle","authSlice","login","logout","store","CounterActions","actions"],"sources":["D:/06-starting-setup/01-starting-project (1)/01-starting-project/src/store/index.js"],"sourcesContent":["//import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = {\r\n  counter: 0,\r\n  showCounter: true,\r\n};\r\n\r\nconst initialAuthState={\r\n  isLoggedin:false,\r\n  isLoggedout:true,\r\n}\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducer: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggle(state) {\r\n      state.counter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst authSlice=createSlice({\r\n  name:\"auth\",\r\n  initialAuthState,\r\n  reducer:{\r\n    login(state){\r\n        state.isLoggedin=true,\r\n        state.isLoggedout=false\r\n    },\r\n    logout(state){\r\n      state.isLoggedin=false,\r\n      state.isLoggedout=true\r\n    }\r\n  }\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer: {counter: counterSlice.reducer}\r\n});\r\n\r\nexport const CounterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;EAC1BC,OAAO,EAAE,CADiB;EAE1BC,WAAW,EAAE;AAFa,CAA5B;AAKA,MAAMC,gBAAgB,GAAC;EACrBC,UAAU,EAAC,KADU;EAErBC,WAAW,EAAC;AAFS,CAAvB;AAKA,MAAMC,YAAY,GAAGR,WAAW,CAAC;EAC/BS,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAER,mBAFiB;EAG/BS,OAAO,EAAE;IACPC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACV,OAAN;IACD,CAHM;;IAIPW,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACV,OAAN;IACD,CANM;;IAOPY,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtBH,KAAK,CAACV,OAAN,GAAgBU,KAAK,CAACV,OAAN,GAAgBa,MAAM,CAACC,OAAvC;IACD,CATM;;IAUPC,MAAM,CAACL,KAAD,EAAQ;MACZA,KAAK,CAACV,OAAN,GAAgB,CAACU,KAAK,CAACT,WAAvB;IACD;;EAZM;AAHsB,CAAD,CAAhC;AAmBA,MAAMe,SAAS,GAACnB,WAAW,CAAC;EAC1BS,IAAI,EAAC,MADqB;EAE1BJ,gBAF0B;EAG1BM,OAAO,EAAC;IACNS,KAAK,CAACP,KAAD,EAAO;MACRA,KAAK,CAACP,UAAN,GAAiB,IAAjB,EACAO,KAAK,CAACN,WAAN,GAAkB,KADlB;IAEH,CAJK;;IAKNc,MAAM,CAACR,KAAD,EAAO;MACXA,KAAK,CAACP,UAAN,GAAiB,KAAjB,EACAO,KAAK,CAACN,WAAN,GAAkB,IADlB;IAED;;EARK;AAHkB,CAAD,CAA3B;AAeA,MAAMe,KAAK,GAAGrB,cAAc,CAAC;EAC3BU,OAAO,EAAE;IAACR,OAAO,EAAEK,YAAY,CAACG;EAAvB;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMY,cAAc,GAAGf,YAAY,CAACgB,OAApC;AAEP,eAAeF,KAAf"},"metadata":{},"sourceType":"module"}