{"ast":null,"code":"//import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport counterSlice from \"./counter\"; // const initialCounterState = {\n//   counter: 0,\n//   showCounter: true,\n// };\n// const counterSlice = createSlice({\n//   name: \"counter\",\n//   initialState: initialCounterState,\n//   reducer: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       state.counter = state.counter + action.payload;\n//     },\n//     toggle(state) {\n//       state.counter = !state.showCounter;\n//     },\n//   },\n// });\n\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const CounterActions = counterSlice.actions;\nexport const AuthActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","counterSlice","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","auth","CounterActions","actions","AuthActions"],"sources":["D:/06-starting-setup/01-starting-project (1)/01-starting-project/src/store/index.js"],"sourcesContent":["//import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport counterSlice from \"./counter\";\r\n\r\n// const initialCounterState = {\r\n//   counter: 0,\r\n//   showCounter: true,\r\n// };\r\n\r\n// const counterSlice = createSlice({\r\n//   name: \"counter\",\r\n//   initialState: initialCounterState,\r\n//   reducer: {\r\n//     increment(state) {\r\n//       state.counter++;\r\n//     },\r\n//     decrement(state) {\r\n//       state.counter--;\r\n//     },\r\n//     increase(state, action) {\r\n//       state.counter = state.counter + action.payload;\r\n//     },\r\n//     toggle(state) {\r\n//       state.counter = !state.showCounter;\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'authentication',\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const CounterActions = counterSlice.actions;\r\nexport const AuthActions = authSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,OAAOC,YAAP,MAAyB,WAAzB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AADM,CAAzB;AAIA,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,gBADsB;EAE5BC,YAAY,EAAEJ,gBAFc;EAG5BK,QAAQ,EAAE;IACRC,KAAK,CAACC,KAAD,EAAQ;MACXA,KAAK,CAACN,eAAN,GAAwB,IAAxB;IACD,CAHO;;IAIRO,MAAM,CAACD,KAAD,EAAQ;MACZA,KAAK,CAACN,eAAN,GAAwB,KAAxB;IACD;;EANO;AAHkB,CAAD,CAA7B;AAaA,MAAMQ,KAAK,GAAGX,cAAc,CAAC;EAC3BY,OAAO,EAAE;IAAEC,OAAO,EAAEZ,YAAY,CAACW,OAAxB;IAAiCE,IAAI,EAAEV,SAAS,CAACQ;EAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMG,cAAc,GAAGd,YAAY,CAACe,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGb,SAAS,CAACY,OAA9B;AAEP,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}